ProgNode(statements=[FunctionNode(functionName=addTwo, parameters=[x], body=OperationNode(operator=plus, operands=[AtomNode(x), LiteralNode(2)])), FunctionCallNode(functionName=addTwo, parameters=[AtomNode(addTwo), LiteralNode(3)]), FunctionNode(functionName=square, parameters=[x], body=OperationNode(operator=times, operands=[AtomNode(x), AtomNode(x)])), FunctionCallNode(functionName=square, parameters=[AtomNode(square), LiteralNode(4)]), FunctionNode(functionName=sumOfSquares, parameters=[a, b], body=OperationNode(operator=plus, operands=[FunctionCallNode(functionName=square, parameters=[AtomNode(square), AtomNode(a)]), FunctionCallNode(functionName=square, parameters=[AtomNode(square), AtomNode(b)])])), FunctionCallNode(functionName=sumOfSquares, parameters=[AtomNode(sumOfSquares), LiteralNode(3), LiteralNode(4)]), FunctionNode(functionName=powerOfThree, parameters=[x], body=OperationNode(operator=times, operands=[FunctionCallNode(functionName=square, parameters=[AtomNode(square), AtomNode(x)]), AtomNode(x)])), FunctionCallNode(functionName=powerOfThree, parameters=[AtomNode(powerOfThree), LiteralNode(2)])])
  FunctionNode(functionName=addTwo, parameters=[x], body=OperationNode(operator=plus, operands=[AtomNode(x), LiteralNode(2)]))
  FunctionCallNode(functionName=addTwo, parameters=[AtomNode(addTwo), LiteralNode(3)])
  FunctionNode(functionName=square, parameters=[x], body=OperationNode(operator=times, operands=[AtomNode(x), AtomNode(x)]))
  FunctionCallNode(functionName=square, parameters=[AtomNode(square), LiteralNode(4)])
  FunctionNode(functionName=sumOfSquares, parameters=[a, b], body=OperationNode(operator=plus, operands=[FunctionCallNode(functionName=square, parameters=[AtomNode(square), AtomNode(a)]), FunctionCallNode(functionName=square, parameters=[AtomNode(square), AtomNode(b)])]))
  FunctionCallNode(functionName=sumOfSquares, parameters=[AtomNode(sumOfSquares), LiteralNode(3), LiteralNode(4)])
  FunctionNode(functionName=powerOfThree, parameters=[x], body=OperationNode(operator=times, operands=[FunctionCallNode(functionName=square, parameters=[AtomNode(square), AtomNode(x)]), AtomNode(x)]))
  FunctionCallNode(functionName=powerOfThree, parameters=[AtomNode(powerOfThree), LiteralNode(2)])
