ProgNode(statements=[FunctionNode(functionName=addTwo, parameters=[x], body=ProgNode(statements=[OperationNode(operator=plus, operands=[AtomNode(x), LiteralNode(2)])])), FunctionCallNode(functionName=addTwo, parameters=[LiteralNode(3)]), FunctionNode(functionName=square, parameters=[x], body=ProgNode(statements=[OperationNode(operator=times, operands=[AtomNode(x), AtomNode(x)])])), FunctionCallNode(functionName=square, parameters=[LiteralNode(4)]), FunctionNode(functionName=sumOfSquares, parameters=[a, b], body=ProgNode(statements=[OperationNode(operator=plus, operands=[FunctionCallNode(functionName=square, parameters=[AtomNode(a)]), FunctionCallNode(functionName=square, parameters=[AtomNode(b)])])])), FunctionCallNode(functionName=sumOfSquares, parameters=[LiteralNode(3), LiteralNode(4)]), FunctionNode(functionName=powerOfThree, parameters=[x], body=ProgNode(statements=[OperationNode(operator=times, operands=[FunctionCallNode(functionName=square, parameters=[AtomNode(x)]), AtomNode(x)])])), FunctionCallNode(functionName=powerOfThree, parameters=[LiteralNode(2)])])
  FunctionNode(functionName=addTwo, parameters=[x], body=ProgNode(statements=[OperationNode(operator=plus, operands=[AtomNode(x), LiteralNode(2)])]))
    OperationNode(operator=plus, operands=[AtomNode(x), LiteralNode(2)])
      AtomNode(x)
      LiteralNode(2)
  FunctionCallNode(functionName=addTwo, parameters=[LiteralNode(3)])
  FunctionNode(functionName=square, parameters=[x], body=ProgNode(statements=[OperationNode(operator=times, operands=[AtomNode(x), AtomNode(x)])]))
    OperationNode(operator=times, operands=[AtomNode(x), AtomNode(x)])
      AtomNode(x)
      AtomNode(x)
  FunctionCallNode(functionName=square, parameters=[LiteralNode(4)])
  FunctionNode(functionName=sumOfSquares, parameters=[a, b], body=ProgNode(statements=[OperationNode(operator=plus, operands=[FunctionCallNode(functionName=square, parameters=[AtomNode(a)]), FunctionCallNode(functionName=square, parameters=[AtomNode(b)])])]))
    OperationNode(operator=plus, operands=[FunctionCallNode(functionName=square, parameters=[AtomNode(a)]), FunctionCallNode(functionName=square, parameters=[AtomNode(b)])])
      FunctionCallNode(functionName=square, parameters=[AtomNode(a)])
      FunctionCallNode(functionName=square, parameters=[AtomNode(b)])
  FunctionCallNode(functionName=sumOfSquares, parameters=[LiteralNode(3), LiteralNode(4)])
  FunctionNode(functionName=powerOfThree, parameters=[x], body=ProgNode(statements=[OperationNode(operator=times, operands=[FunctionCallNode(functionName=square, parameters=[AtomNode(x)]), AtomNode(x)])]))
    OperationNode(operator=times, operands=[FunctionCallNode(functionName=square, parameters=[AtomNode(x)]), AtomNode(x)])
      FunctionCallNode(functionName=square, parameters=[AtomNode(x)])
      AtomNode(x)
  FunctionCallNode(functionName=powerOfThree, parameters=[LiteralNode(2)])
