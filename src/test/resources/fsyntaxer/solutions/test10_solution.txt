ProgNode(statements=[ConditionNode(branches=[ConditionBranch(condition=ComparisonNode(comparison=less, leftElement=LiteralNode(3), rightElement=LiteralNode(5)), action=OperationNode(operator=plus, operands=[LiteralNode(2), LiteralNode(2)]))], defaultAction=[OperationNode(operator=minus, operands=[LiteralNode(5), LiteralNode(3)])]), ConditionNode(branches=[ConditionBranch(condition=ComparisonNode(comparison=greater, leftElement=LiteralNode(5), rightElement=LiteralNode(3)), action=OperationNode(operator=plus, operands=[LiteralNode(10), LiteralNode(5)]))], defaultAction=[OperationNode(operator=minus, operands=[LiteralNode(5), LiteralNode(3)])]), ConditionNode(branches=[ConditionBranch(condition=ComparisonNode(comparison=greater, leftElement=LiteralNode(5), rightElement=LiteralNode(2)), action=OperationNode(operator=plus, operands=[LiteralNode(1), LiteralNode(1)]))], defaultAction=[OperationNode(operator=minus, operands=[LiteralNode(4), LiteralNode(2)])]), ConditionNode(branches=[ConditionBranch(condition=LogicalOperationNode(operator=and, leftElement=ComparisonNode(comparison=greater, leftElement=LiteralNode(5), rightElement=LiteralNode(3)), rightElement=ComparisonNode(comparison=less, leftElement=LiteralNode(2), rightElement=LiteralNode(4))), action=OperationNode(operator=plus, operands=[LiteralNode(10), LiteralNode(5)]))], defaultAction=[OperationNode(operator=minus, operands=[LiteralNode(5), LiteralNode(2)])]), ConditionNode(branches=[ConditionBranch(condition=LogicalOperationNode(operator=or, leftElement=ComparisonNode(comparison=less, leftElement=LiteralNode(3), rightElement=LiteralNode(2)), rightElement=ComparisonNode(comparison=greater, leftElement=LiteralNode(5), rightElement=LiteralNode(1))), action=OperationNode(operator=plus, operands=[LiteralNode(2), LiteralNode(3)]))], defaultAction=[OperationNode(operator=minus, operands=[LiteralNode(5), LiteralNode(2)])]), FunctionNode(functionName=customfunc, parameters=[x], body=ProgNode(statements=[OperationNode(operator=plus, operands=[AtomNode(x), LiteralNode(2)])])), ConditionNode(branches=[ConditionBranch(condition=ComparisonNode(comparison=less, leftElement=LiteralNode(1), rightElement=LiteralNode(2)), action=FunctionCallNode(functionName=customfunc, parameters=[LiteralNode(2)]))], defaultAction=[null])])
  ConditionNode(branches=[ConditionBranch(condition=ComparisonNode(comparison=less, leftElement=LiteralNode(3), rightElement=LiteralNode(5)), action=OperationNode(operator=plus, operands=[LiteralNode(2), LiteralNode(2)]))], defaultAction=[OperationNode(operator=minus, operands=[LiteralNode(5), LiteralNode(3)])])
    BoolNode(booleanNode=true)
    LiteralNode(4)
  ConditionNode(branches=[ConditionBranch(condition=ComparisonNode(comparison=greater, leftElement=LiteralNode(5), rightElement=LiteralNode(3)), action=OperationNode(operator=plus, operands=[LiteralNode(10), LiteralNode(5)]))], defaultAction=[OperationNode(operator=minus, operands=[LiteralNode(5), LiteralNode(3)])])
    BoolNode(booleanNode=true)
    LiteralNode(15)
  ConditionNode(branches=[ConditionBranch(condition=ComparisonNode(comparison=greater, leftElement=LiteralNode(5), rightElement=LiteralNode(2)), action=OperationNode(operator=plus, operands=[LiteralNode(1), LiteralNode(1)]))], defaultAction=[OperationNode(operator=minus, operands=[LiteralNode(4), LiteralNode(2)])])
    BoolNode(booleanNode=true)
    LiteralNode(2)
  ConditionNode(branches=[ConditionBranch(condition=LogicalOperationNode(operator=and, leftElement=ComparisonNode(comparison=greater, leftElement=LiteralNode(5), rightElement=LiteralNode(3)), rightElement=ComparisonNode(comparison=less, leftElement=LiteralNode(2), rightElement=LiteralNode(4))), action=OperationNode(operator=plus, operands=[LiteralNode(10), LiteralNode(5)]))], defaultAction=[OperationNode(operator=minus, operands=[LiteralNode(5), LiteralNode(2)])])
    LogicalOperationNode(operator=and, leftElement=ComparisonNode(comparison=greater, leftElement=LiteralNode(5), rightElement=LiteralNode(3)), rightElement=ComparisonNode(comparison=less, leftElement=LiteralNode(2), rightElement=LiteralNode(4)))
      BoolNode(booleanNode=true)
      BoolNode(booleanNode=true)
    LiteralNode(15)
  ConditionNode(branches=[ConditionBranch(condition=LogicalOperationNode(operator=or, leftElement=ComparisonNode(comparison=less, leftElement=LiteralNode(3), rightElement=LiteralNode(2)), rightElement=ComparisonNode(comparison=greater, leftElement=LiteralNode(5), rightElement=LiteralNode(1))), action=OperationNode(operator=plus, operands=[LiteralNode(2), LiteralNode(3)]))], defaultAction=[OperationNode(operator=minus, operands=[LiteralNode(5), LiteralNode(2)])])
    LogicalOperationNode(operator=or, leftElement=ComparisonNode(comparison=less, leftElement=LiteralNode(3), rightElement=LiteralNode(2)), rightElement=ComparisonNode(comparison=greater, leftElement=LiteralNode(5), rightElement=LiteralNode(1)))
      BoolNode(booleanNode=false)
      BoolNode(booleanNode=true)
    LiteralNode(5)
  FunctionNode(functionName=customfunc, parameters=[x], body=ProgNode(statements=[OperationNode(operator=plus, operands=[AtomNode(x), LiteralNode(2)])]))
    OperationNode(operator=plus, operands=[AtomNode(x), LiteralNode(2)])
      AtomNode(x)
      LiteralNode(2)
  ConditionNode(branches=[ConditionBranch(condition=ComparisonNode(comparison=less, leftElement=LiteralNode(1), rightElement=LiteralNode(2)), action=FunctionCallNode(functionName=customfunc, parameters=[LiteralNode(2)]))], defaultAction=[null])
    BoolNode(booleanNode=true)
    FunctionCallNode(functionName=customfunc, parameters=[LiteralNode(2)])
