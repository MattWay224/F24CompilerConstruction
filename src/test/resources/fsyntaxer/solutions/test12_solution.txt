ProgNode(statements=[AssignmentNode(variable=counter, value=LiteralNode(0)), WhileNode(condition=ComparisonNode(comparison=less, leftElement=AtomNode(counter), rightElement=LiteralNode(10)), body=ConditionNode(branches=[ConditionBranch(condition=ComparisonNode(comparison=equal, leftElement=AtomNode(counter), rightElement=LiteralNode(5)), action=BreakNode())], defaultAction=[AssignmentNode(variable=counter, value=OperationNode(operator=plus, operands=[AtomNode(counter), LiteralNode(1)]))]))])
  AssignmentNode(variable=counter, value=LiteralNode(0))
    LiteralNode(0)
  WhileNode(condition=ComparisonNode(comparison=less, leftElement=AtomNode(counter), rightElement=LiteralNode(10)), body=ConditionNode(branches=[ConditionBranch(condition=ComparisonNode(comparison=equal, leftElement=AtomNode(counter), rightElement=LiteralNode(5)), action=BreakNode())], defaultAction=[AssignmentNode(variable=counter, value=OperationNode(operator=plus, operands=[AtomNode(counter), LiteralNode(1)]))]))
    ComparisonNode(comparison=less, leftElement=AtomNode(counter), rightElement=LiteralNode(10))
      AtomNode(counter)
      LiteralNode(10)
    ConditionNode(branches=[ConditionBranch(condition=ComparisonNode(comparison=equal, leftElement=AtomNode(counter), rightElement=LiteralNode(5)), action=BreakNode())], defaultAction=[AssignmentNode(variable=counter, value=OperationNode(operator=plus, operands=[AtomNode(counter), LiteralNode(1)]))])
      ComparisonNode(comparison=equal, leftElement=AtomNode(counter), rightElement=LiteralNode(5))
        AtomNode(counter)
        LiteralNode(5)
      BreakNode()
