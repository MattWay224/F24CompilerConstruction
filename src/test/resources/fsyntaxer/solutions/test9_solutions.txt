ProgNode(statements=[AssignmentNode(variable=double, value=LambdaNode(parameters=[x], body=OperationNode(operator=times, operands=[AtomNode(x), LiteralNode(2)]))), FunctionCallNode(functionName=double, parameters=[AtomNode(double), LiteralNode(4)]), AssignmentNode(variable=increment, value=LambdaNode(parameters=[x], body=OperationNode(operator=plus, operands=[AtomNode(x), LiteralNode(1)]))), FunctionCallNode(functionName=increment, parameters=[AtomNode(increment), LiteralNode(7)]), AssignmentNode(variable=applyTwice, value=LambdaNode(parameters=[f, x], body=ListNode(elements=[AtomNode(f),ListNode(elements=[AtomNode(f),AtomNode(x)])]))), FunctionCallNode(functionName=applyTwice, parameters=[AtomNode(applyTwice), AtomNode(increment), LiteralNode(5)]), AssignmentNode(variable=subtractTwo, value=LambdaNode(parameters=[x], body=OperationNode(operator=minus, operands=[AtomNode(x), LiteralNode(2)]))), FunctionCallNode(functionName=applyTwice, parameters=[AtomNode(applyTwice), AtomNode(subtractTwo), LiteralNode(10)])])
  AssignmentNode(variable=double, value=LambdaNode(parameters=[x], body=OperationNode(operator=times, operands=[AtomNode(x), LiteralNode(2)])))
    LambdaNode(parameters=[x], body=OperationNode(operator=times, operands=[AtomNode(x), LiteralNode(2)]))
      OperationNode(operator=times, operands=[AtomNode(x), LiteralNode(2)])
        AtomNode(x)
        LiteralNode(2)
  FunctionCallNode(functionName=double, parameters=[AtomNode(double), LiteralNode(4)])
  AssignmentNode(variable=increment, value=LambdaNode(parameters=[x], body=OperationNode(operator=plus, operands=[AtomNode(x), LiteralNode(1)])))
    LambdaNode(parameters=[x], body=OperationNode(operator=plus, operands=[AtomNode(x), LiteralNode(1)]))
      OperationNode(operator=plus, operands=[AtomNode(x), LiteralNode(1)])
        AtomNode(x)
        LiteralNode(1)
  FunctionCallNode(functionName=increment, parameters=[AtomNode(increment), LiteralNode(7)])
  AssignmentNode(variable=applyTwice, value=LambdaNode(parameters=[f, x], body=ListNode(elements=[AtomNode(f),ListNode(elements=[AtomNode(f),AtomNode(x)])])))
    LambdaNode(parameters=[f, x], body=ListNode(elements=[AtomNode(f),ListNode(elements=[AtomNode(f),AtomNode(x)])]))
      ListNode(elements=[AtomNode(f),ListNode(elements=[AtomNode(f),AtomNode(x)])])
        AtomNode(f)
        ListNode(elements=[AtomNode(f),AtomNode(x)])
          AtomNode(f)
          AtomNode(x)
  FunctionCallNode(functionName=applyTwice, parameters=[AtomNode(applyTwice), AtomNode(increment), LiteralNode(5)])
  AssignmentNode(variable=subtractTwo, value=LambdaNode(parameters=[x], body=OperationNode(operator=minus, operands=[AtomNode(x), LiteralNode(2)])))
    LambdaNode(parameters=[x], body=OperationNode(operator=minus, operands=[AtomNode(x), LiteralNode(2)]))
      OperationNode(operator=minus, operands=[AtomNode(x), LiteralNode(2)])
        AtomNode(x)
        LiteralNode(2)
  FunctionCallNode(functionName=applyTwice, parameters=[AtomNode(applyTwice), AtomNode(subtractTwo), LiteralNode(10)])
