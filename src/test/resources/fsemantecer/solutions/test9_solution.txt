ProgNode(statements=[AssignmentNode(variable=Yelizar, value=LambdaNode(parameters=[x], body=OperationNode(operator=times, operands=[AtomNode(x), LiteralNode(2)]))), FunctionCallNode(functionName=Yelizar, parameters=[AtomNode(Yelizar), LiteralNode(4)]), AssignmentNode(variable=increment, value=LambdaNode(parameters=[x], body=OperationNode(operator=plus, operands=[AtomNode(x), LiteralNode(1)]))), FunctionCallNode(functionName=increment, parameters=[AtomNode(increment), LiteralNode(7)]), AssignmentNode(variable=plusFour, value=LambdaNode(parameters=[f], body=OperationNode(operator=plus, operands=[AtomNode(f), LiteralNode(4)]))), FunctionCallNode(functionName=plusFour, parameters=[AtomNode(plusFour), FunctionCallNode(functionName=increment, parameters=[AtomNode(increment), LiteralNode(5)])]), AssignmentNode(variable=subtractTwo, value=LambdaNode(parameters=[x], body=OperationNode(operator=minus, operands=[AtomNode(x), LiteralNode(2)]))), FunctionCallNode(functionName=plusFour, parameters=[AtomNode(plusFour), FunctionCallNode(functionName=subtractTwo, parameters=[AtomNode(subtractTwo), LiteralNode(10)])])])
  AssignmentNode(variable=Yelizar, value=LambdaNode(parameters=[x], body=OperationNode(operator=times, operands=[AtomNode(x), LiteralNode(2)])))
    LambdaNode(parameters=[x], body=OperationNode(operator=times, operands=[AtomNode(x), LiteralNode(2)]))
      OperationNode(operator=times, operands=[AtomNode(x), LiteralNode(2)])
        AtomNode(x)
        LiteralNode(2)
  FunctionCallNode(functionName=Yelizar, parameters=[AtomNode(Yelizar), LiteralNode(4)])
  AssignmentNode(variable=increment, value=LambdaNode(parameters=[x], body=OperationNode(operator=plus, operands=[AtomNode(x), LiteralNode(1)])))
    LambdaNode(parameters=[x], body=OperationNode(operator=plus, operands=[AtomNode(x), LiteralNode(1)]))
      OperationNode(operator=plus, operands=[AtomNode(x), LiteralNode(1)])
        AtomNode(x)
        LiteralNode(1)
  FunctionCallNode(functionName=increment, parameters=[AtomNode(increment), LiteralNode(7)])
  AssignmentNode(variable=plusFour, value=LambdaNode(parameters=[f], body=OperationNode(operator=plus, operands=[AtomNode(f), LiteralNode(4)])))
    LambdaNode(parameters=[f], body=OperationNode(operator=plus, operands=[AtomNode(f), LiteralNode(4)]))
      OperationNode(operator=plus, operands=[AtomNode(f), LiteralNode(4)])
        AtomNode(f)
        LiteralNode(4)
  FunctionCallNode(functionName=plusFour, parameters=[AtomNode(plusFour), FunctionCallNode(functionName=increment, parameters=[AtomNode(increment), LiteralNode(5)])])
  AssignmentNode(variable=subtractTwo, value=LambdaNode(parameters=[x], body=OperationNode(operator=minus, operands=[AtomNode(x), LiteralNode(2)])))
    LambdaNode(parameters=[x], body=OperationNode(operator=minus, operands=[AtomNode(x), LiteralNode(2)]))
      OperationNode(operator=minus, operands=[AtomNode(x), LiteralNode(2)])
        AtomNode(x)
        LiteralNode(2)
  FunctionCallNode(functionName=plusFour, parameters=[AtomNode(plusFour), FunctionCallNode(functionName=subtractTwo, parameters=[AtomNode(subtractTwo), LiteralNode(10)])])
