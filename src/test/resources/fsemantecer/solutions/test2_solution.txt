ProgNode(statements=[OperationNode(operator=plus, operands=[LiteralNode(3), LiteralNode(3)]), OperationNode(operator=minus, operands=[LiteralNode(3), LiteralNode(6)]), OperationNode(operator=times, operands=[LiteralNode(7), LiteralNode(7)]), OperationNode(operator=divide, operands=[LiteralNode(65), LiteralNode(9)]), AssignmentNode(variable=a, value=OperationNode(operator=plus, operands=[LiteralNode(1.5), LiteralNode(2.5)])), AssignmentNode(variable=b, value=OperationNode(operator=divide, operands=[LiteralNode(9.0), LiteralNode(3.0)])), AtomNode(a), AtomNode(b)])
  OperationNode(operator=plus, operands=[LiteralNode(3), LiteralNode(3)])
    LiteralNode(3)
    LiteralNode(3)
  OperationNode(operator=minus, operands=[LiteralNode(3), LiteralNode(6)])
    LiteralNode(3)
    LiteralNode(6)
  OperationNode(operator=times, operands=[LiteralNode(7), LiteralNode(7)])
    LiteralNode(7)
    LiteralNode(7)
  OperationNode(operator=divide, operands=[LiteralNode(65), LiteralNode(9)])
    LiteralNode(65)
    LiteralNode(9)
  AssignmentNode(variable=a, value=OperationNode(operator=plus, operands=[LiteralNode(1.5), LiteralNode(2.5)]))
    OperationNode(operator=plus, operands=[LiteralNode(1.5), LiteralNode(2.5)])
      LiteralNode(1.5)
      LiteralNode(2.5)
  AssignmentNode(variable=b, value=OperationNode(operator=divide, operands=[LiteralNode(9.0), LiteralNode(3.0)]))
    OperationNode(operator=divide, operands=[LiteralNode(9.0), LiteralNode(3.0)])
      LiteralNode(9.0)
      LiteralNode(3.0)
  AtomNode(a)
  AtomNode(b)
